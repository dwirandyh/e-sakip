<?php
/**
 * Created by PhpStorm.
 * User: Dwi Randy H
 * Date: 5/2/2019
 * Time: 12:40 PM
 */

namespace App\Http\Controllers;

use App\Http\Controllers\Administrator\BaseController;
use App\Repositories\DetailPenilaianRepository;
use App\Repositories\PenilaianRepository;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Validator;
use Mpdf\Mpdf;
use Mpdf\MpdfException;

class PenilaianController extends BaseController
{
    private $penilaianRepo, $detailPenilaianRepo;

    function __construct(PenilaianRepository $penilaianRepository, DetailPenilaianRepository $detailPenilaianRepository)
    {
        $this->title = 'Penilaian LKE';
        $this->repository = $penilaianRepository;
        $this->route = '/penilaian';
        $this->view = 'penilaian.data';

        $this->penilaianRepo = $penilaianRepository;
        $this->detailPenilaianRepo = $detailPenilaianRepository;

        parent::__construct();
    }

    public function index(Request $request)
    {
        $this->viewData['jabatan'] = Auth::guard('petugas')->user()->jabatan;
        return parent::index($request); // TODO: Change the autogenerated stub
    }

    public function add()
    {
        $this->viewData['nilaiYT'] = \Config::get('custom.nilaiYT');
        $this->viewData['nilaiAbjad'] = \Config::get('custom.nilaiAbjad');

        $this->viewData['status'] = '';

        $this->view = 'penilaian.tambah';
        return parent::add(); // TODO: Change the autogenerated stub
    }

    public function store(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'renstra' => 'mimes:doc,pdf,docx|required',
            'perjanjian_kinerja' => 'mimes:doc,pdf,docx,zip|required',
            'rencana_aksi' => 'mimes:doc,pdf,docx,zip|required',
            'akuntabilitas' => 'mimes:doc,pdf,docx,zip|required',
        ]);

        if ($validator->fails()) {
            return redirect('/penilaian/add')
                ->withErrors($validator)
                ->withInput();
        } else {
            $renstra = $request->file('renstra');
            $renstraFileName = md5(time() . $renstra->getClientOriginalName()) . '.' . $renstra->getClientOriginalExtension();
            $renstra->move(public_path('files/penilaian'), $renstraFileName);

            $perjanjianKinerja = $request->file('perjanjian_kinerja');
            $perjanjianKinerjaFileName = md5(time() . $perjanjianKinerja->getClientOriginalName()) . '.' . $perjanjianKinerja->getClientOriginalExtension();
            $perjanjianKinerja->move(public_path('files/penilaian'), $perjanjianKinerjaFileName);

            $rencanaAksi = $request->file('rencana_aksi');
            $rencanaAksiFileName = md5(time() . $rencanaAksi->getClientOriginalName()) . '.' . $rencanaAksi->getClientOriginalExtension();
            $rencanaAksi->move(public_path('files/penilaian'), $rencanaAksiFileName);

            $akuntabilitas = $request->file('akuntabilitas');
            $akuntabilitasFileName = md5(time() . $akuntabilitas->getClientOriginalName()) . '.' . $akuntabilitas->getClientOriginalExtension();
            $akuntabilitas->move(public_path('files/penilaian'), $akuntabilitasFileName);

            if ($request->file('dokumen_pendukung')) {
                $dokumenPendukung = $request->file('dokumen_pendukung');
                $dokumenPendukungFileName = md5(time() . $dokumenPendukung->getClientOriginalName()) . '.' . $dokumenPendukung->getClientOriginalExtension();
                $dokumenPendukung->move(public_path('files/penilaian'), $dokumenPendukungFileName);
            }


            $data['id_satuan_kerja'] = Auth::guard('petugas')->user()->id_satuan_kerja;
            $data['tahun'] = $request->post('tahun');
            $data['renstra'] = $renstraFileName;
            $data['perjanjian_kinerja'] = $perjanjianKinerjaFileName;
            $data['rencana_aksi'] = $rencanaAksiFileName;
            $data['akuntabilitas'] = $akuntabilitasFileName;
            $data['dokumenPendukung'] = ((isset($dokumenPendukungFileName) ? $dokumenPendukungFileName : ''));
            $data['nilai_akhir'] = $request->post('nilai_akhir');
            $data['nilai_A_persentase'] = $request->post('nilai_A_persentase');
            $data['nilai_A'] = $request->post('nilai_A');
            $data['nilai_A_I_persentase'] = $request->post('nilai_A_I_persentase');
            $data['nilai_A_I'] = $request->post('nilai_A_I');
            $data['nilai_A_I_a_persentase'] = $request->post('nilai_A_I_a_persentase');
            $data['nilai_A_I_a'] = $request->post('nilai_A_I_a');
            $data['nilai_A_I_b_persentase'] = $request->post('nilai_A_I_b_persentase');
            $data['nilai_A_I_b'] = $request->post('nilai_A_I_b');
            $data['nilai_A_I_c_persentase'] = $request->post('nilai_A_I_c_persentase');
            $data['nilai_A_I_c'] = $request->post('nilai_A_I_c');
            $data['nilai_A_II_persentase'] = $request->post('nilai_A_II_persentase');
            $data['nilai_A_II'] = $request->post('nilai_A_II');
            $data['nilai_A_II_a_persentase'] = $request->post('nilai_A_II_a_persentase');
            $data['nilai_A_II_a'] = $request->post('nilai_A_II_a');
            $data['nilai_A_II_b_persentase'] = $request->post('nilai_A_II_b_persentase');
            $data['nilai_A_II_b'] = $request->post('nilai_A_II_b');
            $data['nilai_A_II_c_persentase'] = $request->post('nilai_A_II_c_persentase');
            $data['nilai_A_II_c'] = $request->post('nilai_A_II_c');
            $data['nilai_B_persentase'] = $request->post('nilai_B_persentase');
            $data['nilai_B'] = $request->post('nilai_B');
            $data['nilai_B_I_persentase'] = $request->post('nilai_B_I_persentase');
            $data['nilai_B_I'] = $request->post('nilai_B_I');
            $data['nilai_B_II_persentase'] = $request->post('nilai_B_II_persentase');
            $data['nilai_B_II'] = $request->post('nilai_B_II');
            $data['nilai_B_III_persentase'] = $request->post('nilai_B_III_persentase');
            $data['nilai_B_III'] = $request->post('nilai_B_III');
            $data['nilai_C_persentase'] = $request->post('nilai_C_persentase');
            $data['nilai_C'] = $request->post('nilai_C');
            $data['nilai_C_I_persentase'] = $request->post('nilai_C_I_persentase');
            $data['nilai_C_I'] = $request->post('nilai_C_I');
            $data['nilai_C_II_persentase'] = $request->post('nilai_C_II_persentase');
            $data['nilai_C_II'] = $request->post('nilai_C_II');
            $data['nilai_C_III_persentase'] = $request->post('nilai_C_III_persentase');
            $data['nilai_C_III'] = $request->post('nilai_C_III');
            $data['nilai_D_persentase'] = $request->post('nilai_D_persentase');
            $data['nilai_D'] = $request->post('nilai_D');
            $data['nilai_D_I_persentase'] = $request->post('nilai_D_I_persentase');
            $data['nilai_D_I'] = $request->post('nilai_D_I');
            $data['nilai_D_II_persentase'] = $request->post('nilai_D_II_persentase');
            $data['nilai_D_II'] = $request->post('nilai_D_II');
            $data['nilai_D_III_persentase'] = $request->post('nilai_D_III_persentase');
            $data['nilai_D_III'] = $request->post('nilai_D_III');
            $data['nilai_E_persentase'] = $request->post('nilai_E_persentase');
            $data['nilai_E'] = $request->post('nilai_E');
            $data['nilai_E_I_persentase'] = $request->post('nilai_E_I_persentase');
            $data['nilai_E_I'] = $request->post('nilai_E_I');
            $data['nilai_E_II_persentase'] = $request->post('nilai_E_II_persentase');
            $data['nilai_E_II'] = $request->post('nilai_E_II');

            $penilaian = $this->penilaianRepo->insert($data);

            // form kriteria penilaian
            $kriteria = $request->post('kriteria');
            foreach ($kriteria as $key => $row) {
                $row['id_penilaian'] = $penilaian->id;
                $row['id_kriteria_penilaian'] = $key;
                $this->detailPenilaianRepo->create($row);
            }


            return redirect('/penilaian');
        }
    }

    public function submitForm(Request $request, $id)
    {
        $this->viewData['nilaiYT'] = \Config::get('custom.nilaiYT');
        $this->viewData['nilaiAbjad'] = \Config::get('custom.nilaiAbjad');

        $this->view = 'penilaian.tambah';

        $this->viewData['penilaian'] = $this->penilaianRepo->detail($id);
        $this->viewData['status'] = $this->viewData['penilaian']->status;

        $this->viewData['detailPenilaian'] = $this->penilaianRepo->getDetailPenilaianById($id);

        return view('penilaian.submit', $this->viewData);
    }

    public function submit(Request $request, $id)
    {
        if (!empty($request->file('renstra'))) {
            $renstra = $request->file('renstra');
            $renstraFileName = md5(time() . $renstra->getClientOriginalName()) . '.' . $renstra->getClientOriginalExtension();
            $renstra->move(public_path('files/penilaian'), $renstraFileName);

            $data['renstra'] = $renstraFileName;
        }

        if (!empty($request->file('perjanjian_kinerja'))) {
            $perjanjianKinerja = $request->file('perjanjian_kinerja');
            $perjanjianKinerjaFileName = md5(time() . $perjanjianKinerja->getClientOriginalName()) . '.' . $perjanjianKinerja->getClientOriginalExtension();
            $perjanjianKinerja->move(public_path('files/penilaian'), $perjanjianKinerjaFileName);

            $data['perjanjian_kinerja'] = $perjanjianKinerjaFileName;
        }

        if (!empty($request->file('rencana_aksi'))) {
            $rencanaAksi = $request->file('rencana_aksi');
            $rencanaAksiFileName = md5(time() . $rencanaAksi->getClientOriginalName()) . '.' . $rencanaAksi->getClientOriginalExtension();
            $rencanaAksi->move(public_path('files/penilaian'), $rencanaAksiFileName);

            $data['rencana_aksi'] = $rencanaAksiFileName;
        }

        if (!empty($request->file('akuntabilitas'))) {
            $akuntabilitas = $request->file('akuntabilitas');
            $akuntabilitasFileName = md5(time() . $akuntabilitas->getClientOriginalName()) . '.' . $akuntabilitas->getClientOriginalExtension();
            $akuntabilitas->move(public_path('files/penilaian'), $akuntabilitasFileName);

            $data['akuntabilitas'] = $akuntabilitasFileName;
        }

        if (!empty($request->file('dokumen_pendukung'))) {
            $dokumenPendukung = $request->file('dokumen_pendukung');
            $dokumenPendukungFileName = md5(time() . $dokumenPendukung->getClientOriginalName()) . '.' . $dokumenPendukung->getClientOriginalExtension();
            $dokumenPendukung->move(public_path('files/penilaian'), $dokumenPendukungFileName);

            $data['dokumenPendukung'] = ((isset($dokumenPendukungFileName) ? $dokumenPendukungFileName : ''));
        }


        $data['id_satuan_kerja'] = Auth::guard('petugas')->user()->id_satuan_kerja;
        $data['tahun'] = $request->post('tahun');
        $data['nilai_akhir'] = $request->post('nilai_akhir');
        $data['nilai_A_persentase'] = $request->post('nilai_A_persentase');
        $data['nilai_A'] = $request->post('nilai_A');
        $data['nilai_A_I_persentase'] = $request->post('nilai_A_I_persentase');
        $data['nilai_A_I'] = $request->post('nilai_A_I');
        $data['nilai_A_I_a_persentase'] = $request->post('nilai_A_I_a_persentase');
        $data['nilai_A_I_a'] = $request->post('nilai_A_I_a');
        $data['nilai_A_I_b_persentase'] = $request->post('nilai_A_I_b_persentase');
        $data['nilai_A_I_b'] = $request->post('nilai_A_I_b');
        $data['nilai_A_I_c_persentase'] = $request->post('nilai_A_I_c_persentase');
        $data['nilai_A_I_c'] = $request->post('nilai_A_I_c');
        $data['nilai_A_II_persentase'] = $request->post('nilai_A_II_persentase');
        $data['nilai_A_II'] = $request->post('nilai_A_II');
        $data['nilai_A_II_a_persentase'] = $request->post('nilai_A_II_a_persentase');
        $data['nilai_A_II_a'] = $request->post('nilai_A_II_a');
        $data['nilai_A_II_b_persentase'] = $request->post('nilai_A_II_b_persentase');
        $data['nilai_A_II_b'] = $request->post('nilai_A_II_b');
        $data['nilai_A_II_c_persentase'] = $request->post('nilai_A_II_c_persentase');
        $data['nilai_A_II_c'] = $request->post('nilai_A_II_c');
        $data['nilai_B_persentase'] = $request->post('nilai_B_persentase');
        $data['nilai_B'] = $request->post('nilai_B');
        $data['nilai_B_I_persentase'] = $request->post('nilai_B_I_persentase');
        $data['nilai_B_I'] = $request->post('nilai_B_I');
        $data['nilai_B_II_persentase'] = $request->post('nilai_B_II_persentase');
        $data['nilai_B_II'] = $request->post('nilai_B_II');
        $data['nilai_B_III_persentase'] = $request->post('nilai_B_III_persentase');
        $data['nilai_B_III'] = $request->post('nilai_B_III');
        $data['nilai_C_persentase'] = $request->post('nilai_C_persentase');
        $data['nilai_C'] = $request->post('nilai_C');
        $data['nilai_C_I_persentase'] = $request->post('nilai_C_I_persentase');
        $data['nilai_C_I'] = $request->post('nilai_C_I');
        $data['nilai_C_II_persentase'] = $request->post('nilai_C_II_persentase');
        $data['nilai_C_II'] = $request->post('nilai_C_II');
        $data['nilai_C_III_persentase'] = $request->post('nilai_C_III_persentase');
        $data['nilai_C_III'] = $request->post('nilai_C_III');
        $data['nilai_D_persentase'] = $request->post('nilai_D_persentase');
        $data['nilai_D'] = $request->post('nilai_D');
        $data['nilai_D_I_persentase'] = $request->post('nilai_D_I_persentase');
        $data['nilai_D_I'] = $request->post('nilai_D_I');
        $data['nilai_D_II_persentase'] = $request->post('nilai_D_II_persentase');
        $data['nilai_D_II'] = $request->post('nilai_D_II');
        $data['nilai_D_III_persentase'] = $request->post('nilai_D_III_persentase');
        $data['nilai_D_III'] = $request->post('nilai_D_III');
        $data['nilai_E_persentase'] = $request->post('nilai_E_persentase');
        $data['nilai_E'] = $request->post('nilai_E');
        $data['nilai_E_I_persentase'] = $request->post('nilai_E_I_persentase');
        $data['nilai_E_I'] = $request->post('nilai_E_I');
        $data['nilai_E_II_persentase'] = $request->post('nilai_E_II_persentase');
        $data['nilai_E_II'] = $request->post('nilai_E_II');
        $data['status'] = 'submit';
        $this->penilaianRepo->update($data, $id);


        // form kriteria penilaian
        $kriteria = $request->post('kriteria');
        foreach ($kriteria as $key => $row) {
            if (isset($row['idDetail'])) {
                if (isset($row['pilihan'])) {
                    $detail['pilihan'] = $row['pilihan'];
                }
                $detail['nilai'] = $row['nilai'];
                $detail['catatan'] = $row['catatan'];
                $this->detailPenilaianRepo->update($detail, $row['idDetail']);
            }
        }


        return redirect('/penilaian');
    }

    public function temporaryReport($id)
    {
        $this->viewData['penilaian'] = $this->repository->detail($id);
        $this->viewData['detailPenilaian'] = $this->repository->getDetailPenilaianSubCategory($id);
        return view('penilaian.raport_sementara', $this->viewData);
    }

    public function temporaryReportPdf($id)
    {
        $this->viewData['penilaian'] = $this->repository->detail($id);
        $this->viewData['detailPenilaian'] = $this->repository->getDetailPenilaianSubCategory($id);
        $this->viewData['satuanKerja'] = Auth::guard('petugas')->user()->satuanKerja->nama;

        //return view('penilaian.raport_sementara_pdf', $this->viewData);

        $htmlReport = view('penilaian.raport_sementara_pdf', $this->viewData)->render();
        $mpdf = new \Mpdf\Mpdf();
        $mpdf->WriteHTML($htmlReport);
        $mpdf->Output('kertas-kerja-evaluasi-sementara.pdf', 'I');
    }

    public function revisiForm($id)
    {
        $this->viewData['nilaiYT'] = \Config::get('custom.nilaiYT');
        $this->viewData['nilaiAbjad'] = \Config::get('custom.nilaiAbjad');

        $this->viewData['penilaian'] = $this->penilaianRepo->detail($id);
        $this->viewData['status'] = $this->viewData['penilaian']->status;

        $this->viewData['detailPenilaian'] = $this->penilaianRepo->getDetailPenilaianById($id);

        return view('penilaian.revisi', $this->viewData);
    }

    public function submitRevisi(Request $request, $id)
    {
        // form kriteria penilaian
        $kriteria = $request->post('kriteria');
        foreach ($kriteria as $key => $row) {
            if (isset($row['idDetail'])) {
                $detail['catatan_revisi'] = $row['catatan_revisi'];

                if (isset($request->file('kriteria')[$key]['file_revisi'])) {
                    $file = $request->file('kriteria')[$key]['file_revisi'];
                    if (!empty($file)) {
                        $fileName = md5(time() . $file->getClientOriginalName()) . '.' . $file->getClientOriginalExtension();
                        $file->move(public_path('files/revisi'), $fileName);
                        $detail['file_revisi'] = $fileName;
                    }
                } else {
                    $detail['file_revisi'] = null;
                }

                $this->detailPenilaianRepo->update($detail, $row['idDetail']);
            }
        }

        $data['status'] = 'revisi';
        $this->penilaianRepo->update($data, $id);

        return redirect('/penilaian');
    }
}